<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau _1)' inline='true' name='federated.001wzer0m150ly1figwy81cg5k5l' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau _1' name='excel-direct.1vwz3hf0jzpfb0193ytiu0y2z7at'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Rohit/OneDrive/Desktop/Tableau _1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1vwz3hf0jzpfb0193ytiu0y2z7at' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1vwz3hf0jzpfb0193ytiu0y2z7at' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_218BEF3000E14B16A3F92C4255CC29E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_218BEF3000E14B16A3F92C4255CC29E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_218BEF3000E14B16A3F92C4255CC29E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_218BEF3000E14B16A3F92C4255CC29E2]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Rohit/AppData/Local/Temp/TableauTemp/#TableauTemp_0sz673905xppkg167hruz12vunpo.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/23/2024 02:44:28 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_218BEF3000E14B16A3F92C4255CC29E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_218BEF3000E14B16A3F92C4255CC29E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_218BEF3000E14B16A3F92C4255CC29E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_218BEF3000E14B16A3F92C4255CC29E2'>
            <properties context=''>
              <relation connection='excel-direct.1vwz3hf0jzpfb0193ytiu0y2z7at' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_2)' inline='true' name='federated.03hpnk5062jy5c1dr5zs71q26mcf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_2' name='excel-direct.0p1lc5z0om9w7o103k25407ea4y9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Rohit/OneDrive/Desktop/Tableau_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0p1lc5z0om9w7o103k25407ea4y9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0p1lc5z0om9w7o103k25407ea4y9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F8E2A8822604133A59D7C982032402A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F8E2A8822604133A59D7C982032402A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2F8E2A8822604133A59D7C982032402A]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Rohit/AppData/Local/Temp/TableauTemp/#TableauTemp_187djp20heho6h15kaxt40ffl3q7.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/23/2024 02:44:41 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F8E2A8822604133A59D7C982032402A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F8E2A8822604133A59D7C982032402A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2F8E2A8822604133A59D7C982032402A'>
            <properties context=''>
              <relation connection='excel-direct.0p1lc5z0om9w7o103k25407ea4y9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_3)' inline='true' name='federated.1b8raon0wute1x14yuos4018o5ma' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_3' name='excel-direct.1aayvcp1awx9ku1b35d311h5ebwu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Rohit/OneDrive/Desktop/Tableau_3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1aayvcp1awx9ku1b35d311h5ebwu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1aayvcp1awx9ku1b35d311h5ebwu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D57A1EE222E4DDC8A33B0AC361489F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D57A1EE222E4DDC8A33B0AC361489F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D57A1EE222E4DDC8A33B0AC361489F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D57A1EE222E4DDC8A33B0AC361489F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_1D57A1EE222E4DDC8A33B0AC361489F8]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Rohit/AppData/Local/Temp/TableauTemp/#TableauTemp_015ucgc08g055z1bhh9sp1kuoh65.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/23/2024 02:44:58 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D57A1EE222E4DDC8A33B0AC361489F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D57A1EE222E4DDC8A33B0AC361489F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D57A1EE222E4DDC8A33B0AC361489F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D57A1EE222E4DDC8A33B0AC361489F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_1D57A1EE222E4DDC8A33B0AC361489F8'>
            <properties context=''>
              <relation connection='excel-direct.1aayvcp1awx9ku1b35d311h5ebwu' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_4)' inline='true' name='federated.0pjcbfj1higtxa1bkw7f60jf1rmv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_4' name='excel-direct.1e4ec8z0i859d714yasj10kj3inb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Rohit/OneDrive/Desktop/Tableau_4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1e4ec8z0i859d714yasj10kj3inb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1e4ec8z0i859d714yasj10kj3inb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Rohit/AppData/Local/Temp/TableauTemp/#TableauTemp_1mh4bd41dmwf3s11bnapr0qctesv.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/23/2024 02:49:32 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>313</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>304</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1152</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18862</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31224</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_41A78B7AB29B4E02B1C4E0DB08E3D405'>
            <properties context=''>
              <relation connection='excel-direct.1e4ec8z0i859d714yasj10kj3inb' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_DB4868FD1F774A8190F6783F1E5624C5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Population Infected in percent' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avarege Infected per Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_4)' name='federated.0pjcbfj1higtxa1bkw7f60jf1rmv' />
          </datasources>
          <datasource-dependencies datasource='federated.0pjcbfj1higtxa1bkw7f60jf1rmv'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[tmn:date:qk]' value='117' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[tmn:date:qk]' value='87' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Location:nk]' />
              <text column='[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Location:nk]' />
              <text column='[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Forecast Indicator:nk]' />
              <text column='[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[fVal:sum:PercentPopulationInfected:qk]' />
              <color column='[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.07596684992313385' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{904F429D-B152-4B24-AB2D-18DF025C4C4A}' />
    </worksheet>
    <worksheet name='Global Numbers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau _1)' name='federated.001wzer0m150ly1figwy81cg5k5l' />
          </datasources>
          <datasource-dependencies datasource='federated.001wzer0m150ly1figwy81cg5k5l'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.001wzer0m150ly1figwy81cg5k5l].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.001wzer0m150ly1figwy81cg5k5l].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.001wzer0m150ly1figwy81cg5k5l].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.001wzer0m150ly1figwy81cg5k5l].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.001wzer0m150ly1figwy81cg5k5l].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.001wzer0m150ly1figwy81cg5k5l].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.001wzer0m150ly1figwy81cg5k5l].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.001wzer0m150ly1figwy81cg5k5l].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.001wzer0m150ly1figwy81cg5k5l].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='72' />
            <format attr='width' field='[federated.001wzer0m150ly1figwy81cg5k5l].[:Measure Names]' value='157' />
            <format attr='font-size' field='[federated.001wzer0m150ly1figwy81cg5k5l].[:Measure Names]' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#e7f1f5' />
            <format attr='background-color' scope='cols' value='#ddebf0' />
            <format attr='border-color' data-class='total' scope='cols' value='#1b1b1b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.001wzer0m150ly1figwy81cg5k5l].[:Measure Names]' value='bold' />
            <format attr='font-size' field='[federated.001wzer0m150ly1figwy81cg5k5l].[:Measure Names]' value='10' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5f5f5' />
            <format attr='border-color' data-class='total' scope='cols' value='#333333' />
            <format attr='border-width' data-class='total' scope='cols' value='2' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='2' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.001wzer0m150ly1figwy81cg5k5l].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#33333367' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.001wzer0m150ly1figwy81cg5k5l].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{324D97FC-3701-45F4-88A8-8CDF94A42007}' />
    </worksheet>
    <worksheet name='Population Infected in percent'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_3)' name='federated.1b8raon0wute1x14yuos4018o5ma' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b8raon0wute1x14yuos4018o5ma'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b8raon0wute1x14yuos4018o5ma].[Longitude (generated)]' field-type='quantitative' max='22385456.182759687' min='-15150212.672348969' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b8raon0wute1x14yuos4018o5ma].[Latitude (generated)]' field-type='quantitative' max='13502198.824074963' min='-6561547.0032577654' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b8raon0wute1x14yuos4018o5ma].[sum:PercentPopulationInfected:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b8raon0wute1x14yuos4018o5ma].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.1b8raon0wute1x14yuos4018o5ma].[none:Location:nk]' />
              <geometry column='[federated.1b8raon0wute1x14yuos4018o5ma].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b8raon0wute1x14yuos4018o5ma].[Latitude (generated)]</rows>
        <cols>[federated.1b8raon0wute1x14yuos4018o5ma].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1B5ADEA4-02A0-4E97-9616-FA7F28422907}' />
    </worksheet>
    <worksheet name='Total Deth per Continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_2)' name='federated.03hpnk5062jy5c1dr5zs71q26mcf' />
          </datasources>
          <datasource-dependencies datasource='federated.03hpnk5062jy5c1dr5zs71q26mcf'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.03hpnk5062jy5c1dr5zs71q26mcf].[none:location:nk]' direction='DESC' using='[federated.03hpnk5062jy5c1dr5zs71q26mcf].[sum:TotalDeathCount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.03hpnk5062jy5c1dr5zs71q26mcf].[none:location:nk]' value='49' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.03hpnk5062jy5c1dr5zs71q26mcf].[none:location:nk]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03hpnk5062jy5c1dr5zs71q26mcf].[sum:TotalDeathCount:qk]' />
              <lod column='[federated.03hpnk5062jy5c1dr5zs71q26mcf].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='180' />
                <format attr='maxheight' value='180' />
                <format attr='minwidth' value='432' />
                <format attr='maxwidth' value='432' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03hpnk5062jy5c1dr5zs71q26mcf].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.03hpnk5062jy5c1dr5zs71q26mcf].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{DBF38124-00A4-4FA4-A05A-F5138087028F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='13' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='6' type-v2='layout-basic' w='98400' x='800' y='1000'>
                <zone h='24500' id='3' name='Global Numbers' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='5' name='Avarege Infected per Month' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='10' name='Population Infected in percent' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24500' id='11' name='Total Deth per Continent' w='49200' x='800' y='25500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='188' h='24500' id='3' is-fixed='true' name='Global Numbers' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Population Infected in percent' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='11' is-fixed='true' name='Total Deth per Continent' w='49200' x='800' y='25500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Avarege Infected per Month' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7AD2555B-A6EF-4686-BB3C-AD3478F06966}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Global Numbers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.001wzer0m150ly1figwy81cg5k5l].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67ABB2F1-6B5E-40A6-8A44-EF1128F3EB24}' />
    </window>
    <window class='worksheet' name='Total Deth per Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03hpnk5062jy5c1dr5zs71q26mcf].[sum:TotalDeathCount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03hpnk5062jy5c1dr5zs71q26mcf].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D2F6DE1-7611-4026-8279-4C694E78A919}' />
    </window>
    <window class='worksheet' name='Population Infected in percent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='32'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b8raon0wute1x14yuos4018o5ma].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03hpnk5062jy5c1dr5zs71q26mcf].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5908F90-6B95-4A2F-9F4F-3EDF9859141A}' />
    </window>
    <window class='worksheet' name='Avarege Infected per Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Location:nk]&#10;[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Forecast Indicator:nk]</field>
            <field>[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Location:nk]</field>
            <field>[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41A37BB7-7FC8-4960-AFC5-D63E018D4799}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Avarege Infected per Month'>
          <zoom type='entire-view' />
          <highlight field='[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Location:nk]&#10;[federated.0pjcbfj1higtxa1bkw7f60jf1rmv].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Global Numbers' />
        <viewpoint name='Population Infected in percent'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Deth per Continent'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C91DB5ED-C6BE-4C55-BE9A-6F10F48BA071}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avarege Infected per Month' width='192'>
      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
      LOatiFMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='96' name='Global Numbers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population Infected in percent' width='192'>
      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
      emOFogAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Deth per Continent' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
